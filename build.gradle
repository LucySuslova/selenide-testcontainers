buildscript {
    ext {
        allureGradleVersion = '2.8.1'
        allureVersion = '2.13.1'
        jUnitVersion = '5.6.0'
        selenideVersion = '5.7.0'
        containersVersion = '1.12.5'
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'io.qameta.allure' version '2.8.1'
}

group 'io.github.lucysuslova'
version '1.0-SNAPSHOT'

repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

allure {
    autoconfigure = true
    version = "${allureVersion}"

    useJUnit5 {
        version = "${allureVersion}"
    }
}

defaultTasks 'clean', 'test'

dependencies {
    testCompile {
        "org.junit.jupiter:junit-jupiter:$jUnitVersion"
        "com.codeborne:selenide:$selenideVersion"
        "org.testcontainers:selenium:$containersVersion"
        "org.testcontainers:junit-jupiter:$containersVersion"
        "org.testcontainers:testcontainers:$containersVersion"
    }
    testCompile ("io.qameta.allure:allure-selenide:$allureVersion") {
        exclude group: 'junit', module: 'junit'
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    systemProperty "selenide.browser", System.getProperty("selenide.browser")
}

task libs(type: Sync) {
    from configurations.testCompile
    into "$buildDir/lib"
}

compileJava.dependsOn libs

[compileJava, compileTestJava]*.options.collect {options -> options.encoding = 'UTF-8'}
[compileJava, compileTestJava]*.options.collect {options -> options.debug = true}
[compileJava, compileTestJava]*.sourceCompatibility = 1.8
[compileJava, compileTestJava]*.targetCompatibility = 1.8


tasks.withType(Test)*.finalizedBy 'allureReport'